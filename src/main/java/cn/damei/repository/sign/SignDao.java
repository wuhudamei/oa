package cn.damei.repository.sign;
import org.apache.ibatis.annotations.Param;
import org.springframework.stereotype.Repository;
import cn.damei.common.persistence.CrudDao;
import cn.damei.entity.sign.Sign;
import cn.damei.enumeration.SignType;
import java.util.Date;
import java.util.List;
import java.util.Map;
@Repository
public interface SignDao extends CrudDao<Sign> {
    Sign getByEmpIdAndDate(Map<String,Object> map);
    Integer getBySignOutTime(Date signOutTime);
    void updateSignDateById(@Param("empId") Long empId, @Param("date") Date date);
    void updateSignOutDateById(@Param("empId") Long empId, @Param("date") Date date);
    void updateAddress(Sign sign);
    Date findByEmpId(@Param("departmentId") Long departmentId,@Param("date") Date date);
    List<Sign> getToDayData();
    void updateSignTypeById(@Param("signType") SignType belate, @Param("id") Long id);
    List<Sign> findBySignType();
    List<Long> getNoSignEmployeeId();
    void updateSignType(@Param("signType") SignType normal, @Param("id") Long id);
    Long findAttendance();
    Long findAllBeLate();
    List<Sign> findSignTimeNotNULL();
    List<Sign> findAllToDay();
    Long getNoSignEmployeeCount();
    Long findOuter();
    Long findAllLeaveearly();
    void updateSignTypeByEmpId(@Param("signType") SignType absenteeism, @Param("empId") Long id, @Param("date") Date date);
    Long findbelateandleaveearly();
    Sign getSignOutTime(Map<String, Object> map);
    Sign findSignTime(@Param("empId") Long empId);
    void updateToBELATE(@Param("signTime") Date signTime, @Param("signOutTime")Date signOutTime,@Param("id") Long id);
    void updateToLEAVEEARLY(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id")Long id);
    void updateToBELATEANDLEAVEEARLY(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id") Long id);
    void updateToBELATEANDLEAVEEARLYDB(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id") Long id);
    void updateToNORMAL(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id") Long id);
    void updateComToBELATE(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id")Long id);
    void updateComToLEAVEEARLY(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id")Long id);
    void updateComToBELATEANDLEAVEEARLY(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id")Long id);
    void updateComToBELATEANDLEAVEEARLYDB(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id")Long id);
    void updateComToNORMAL(@Param("signTime")Date signTime, @Param("signOutTime")Date signOutTime, @Param("id")Long id);
    Sign findOldType(@Param("employeeId") Long empId,@Param("formatDate") String formatDate);
    void updateSignDate(@Param("empId") Long empId, @Param("signDate") Date signDate);
    void updateSignOutDate(@Param("empId") Long empId, @Param("signOutDate") Date signOutDate);
    int findSignByYesterdayAndEmpId(@Param("empId") Long id);
    Sign findSign(@Param("empId") Long id, @Param("yesterday") Date date, @Param("today") Date today);
    int findWorkCoefficient(@Param("empId") Long empId, @Param("firstDay") Date firstDay, @Param("lastDay") Date lastDay);
    void deleteTen();
    void updateTime(Sign sign);
    List<Sign> getByEmpIdAndYesdate( Map<String,Object> map );
    void insertSignList(List<Sign> signList);
    List<Sign> findDepSignRecord();
    List<Sign> findComSignRecord();
    void deleteByCreateTime(String date);
}
